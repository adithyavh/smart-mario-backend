ID,Difficulty,Question,Answer
1,1,Function to exit from the program that is provided by System class,exit(int);
2,1,Binary data type,boolean
3,1,Data type which stores whole numbers from -128 to 127,byte
4,1,"Data type which stores whole numbers from -32,768 to 32,767",short
5,1,"Data type which stores whole numbers from -2,147,483,648 to 2,147,483,647",int
6,1,"Data type which stores whole numbers from -9,223,372,036,854,775,808 to 9,223,372,036,854,775,807",long
7,1,Data type which stores fractional numbers. Sufficient for storing 6 to 7 decimal digits,float
8,1,Data type which stores fractional numbers. Sufficient for storing 15 decimal digits,double
9,1,Data type which stores a single character/letter or ASCII values,char
10,1,Return type of a method that does not return any value,void
11,1,Syntax for single-line comment,// Hello World
12,1,Syntax for multi-line comment,/* Hello World */
13,1,Statement used to jump out of a loop,break
14,1,"Statement used to break one iteration (in the loop), if a specified condition occurs, and continues with the next iteration in the loop",continue
15,1,Keyword used to generate an exception explicitly,throw
16,1,Keyword used to by the calling function to guard against the exception that is thrown by called function,throws
17,1,Keyword used for the block to handle the exceptions generated by try block,catch
18,2,Java package which contains the utility classes,java.util
19,2,This class is a superclass of String and StringBuffer class,java.lang
20,2,Sentinel controlled loop,while (i<10) { printHi(); i++;}
21,2,Counter controlled loop,for (int i=0; i<10; i++) { printHi(); }
22,2,"Java logical ""and"" operator",&&
23,2,"Java logical ""or"" operator",||
24,2,"Java logical ""not"" operator",!
25,2,"Java ""equal to"" comparison operator",==
26,2,"Java ""not equal"" comparison operator",!=
27,2,"Java bitwise ""AND"" operator",&
28,2,"Java bitwise ""OR"" operator",|
29,2,"Java bitwise ""NOT"" operator",~
30,2,"Java bitwise ""XOR"" operator",^
31,2,Operator to obtain a length of String object,length(objectName)
32,2,Which operator can be used to check the size of an object?,sizeof(objectName)
33,3,Syntax to use explicit class specialization,template <> class myClass<int>{ }
34,3,The syntax for defining the static data members,dataType className :: memberName = value;
35,3,Syntax for returning an object by value,ClassName functionName ( ){ }
36,3,Syntax for defining a function which passes an object by reference,className& functionName ( )
37,3,Correct syntax for declaring pointer to object,className* objectName;
38,3,Syntax of dynamic_cast,dynamic_cast(object)
39,3,Syntax to delete a single object,delete objectName;
40,3,Syntax to delete an array of objects,delete [] objectName;
41,3,Syntax for extern variable declaration,extern data_type variable_name;
42,3,Syntax for extern function declaration,extern return_type function_name(argument_list);
43,3,Syntax to declare an object of class String,String object_Name = value;
44,3,Function to get the character present at a particular index in the string,char charAt(index);
45,3,Get the index of last occurrence of specified character in argument,lastIndexOf()
46,3,Compare string object to another string object,compareTo()
47,3,Convert the whole string characters to uppercase,toUpper()
48,3,Remove white space from both the ends of string,trim()
49,3,Syntax to create object of the inner class,OuterClass.InnerClass innerObject = outerObject.new InnerClass();
50,3,Syntax to access static nested classes,OuterClass.StaticNestedClass
